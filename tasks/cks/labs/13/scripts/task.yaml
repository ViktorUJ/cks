apiVersion: v1
kind: Namespace
metadata:
  name: metadata-access
  labels:
    name: metadata-access
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: all-pod
    role: pod-all
  name: all-pod
  namespace: metadata-access
spec:
  containers:
  - image: viktoruj/cks-lab
    command: ['sh', '-c', 'while true ; do  echo "$(date) i am working ";  sleep 10  ;done']
    name: all-pod
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always

---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: metadata-accessor
    role: metadata-accessor
  name: metadata-accessor
  namespace: metadata-access
spec:
  containers:
  - image: viktoruj/cks-lab
    command: ['sh', '-c', 'while true ; do  echo "$(date) i am working ";  sleep 10  ;done']
    name: metadata-accessor
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
---
apiVersion: v1
data:
  index.html: |+
    <!DOCTYPE html>
    <html>
    <head>
    <title>metadata </title>
    <style>
    html { color-scheme: light dark; }
    body { width: 35em; margin: 0 auto;
    font-family: Tahoma, Verdana, Arial, sans-serif; }
    </style>
    </head>
    <body>
    <h1>Welcome to metadata </h1>
    <p>If you see this page, the metadata  is working</p>

    </body>

kind: ConfigMap
metadata:
  creationTimestamp: null
  name: index.html
  namespace: metadata-access
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: metadata-server
  name: metadata-server
  namespace: metadata-access
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metadata-server
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: metadata-server
    spec:
      volumes:
      - name: index
        configMap:
          name: index.html
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
          - name: index
            mountPath: /usr/share/nginx/html/

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: metadata-server
  name: metadata-server
  namespace: metadata-access
spec:
  ports:
  - name: http
    nodePort: 30089
    port: 80
    protocol: TCP
    targetPort: 80

  selector:
    app: metadata-server
  type: NodePort
